# Agent configuration file


## comm link between GLoSEval and Diesel for DSL Evaluation

### DSLCommLinkServerHost points to the remote IP Address
DSLCommLinkServerHost = "192.168.2.1"
DSLCommLinkServerPort = 5672

### DSLCommLinkClientHost points to the local IP Address
DSLCommLinkClientHost = "192.168.2.6"
DSLCommLinkClientPort = 5672


## Diesel configuration for DSL Evaluation

### DSLEvaluatorHost points to the Diesel IP Address
DSLEvaluatorHost = "192.168.2.1"
DSLEvaluatorPort = 5672

DSLEvaluatorHostData = "/dieselProtocol"

### DSLEvaluatorPreferredSupplierHost points to the Diesel IP Address
DSLEvaluatorPreferredSupplierHost = "192.168.2.1"
DSLEvaluatorPreferredSupplierPort = 5672

DSLEvaluatorNetwork = { }

## Git stuff
TestGitBranch = true

## comm link between GLoSEval and Diesel for Behavior Service

### BFactoryCommLinkServerHost points to the remote IP Address
BFactoryCommLinkServerHost = "192.168.2.1"
BFactoryCommLinkServerPort = 5672

### BFactoryCommLinkClientHost points to the local IP Address
BFactoryCommLinkClientHost = "192.168.2.6"
BFactoryCommLinkClientPort = 5672

## Behavior Service configuration

### BFactoryEvaluatorHost points to the Diesel IP Address
BFactoryEvaluatorHost = "192.168.2.1"
BFactoryEvaluatorPort = 5672

BFactoryEvaluatorHostData = "/bFactoryProtocol"
BFactoryMap = {
  introductionInitiator = { 
    cnxn = {
      src = "introductionCnxn"
      label = "initiation"
      trgt = "introductionCnxn"
    }
    label = "behaviors( introduction( initiator( true ), Alias ) )"
    class = "com.protegra_ati.agentservices.protocols.IntroductionInitiator"
    }
  
introductionRecipient = { 
    cnxn = {
      src = "introductionCnxn"
      label = "receipt"
      trgt = "introductionCnxn"
    }
    label = "behaviors( introduction( recipient( true ), Cnxn ) )"
    class = "com.protegra_ati.agentservices.protocols.IntroductionRecipient"
    }     

  verifier = {
    cnxn = {
      src = "id"
      label = "verifier"
      trgt = "id"
    }
    label = "behaviors( verification( verifier( true ) ) )"
    class = "com.protegra_ati.agentservices.protocols.VerifierBehavior"
  }

  relyingParty = {
    cnxn = {
      src = "id"
      label = "relyingParty"
      trgt = "id"
    }
    label = "behaviors( verification( relyingParty( true ) ) )"
    class = "com.protegra_ati.agentservices.protocols.RelyingPartyBehavior"
  }

  claimant = {
    cnxn = {
      src = "id"
      label = "claimant"
      trgt = "id"
    }
    label = "behaviors( verification( claimant( true ) ) )"
    class = "com.protegra_ati.agentservices.protocols.ClaimantBehavior"
  }

}